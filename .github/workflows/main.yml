---
name: CI/CD
on:
    push:
        branches: [main]   # Triggers on direct pushes to main (including PR merges)
        tags: [v*.*.*]    # Trigger when a tag like "v1.0.0" is pushed
    pull_request:
        branches: [main]   # Triggers when a PR is opened/updated against main

jobs:
    golangci-lint:
        name: golangci-lint
        runs-on: ubuntu-24.04
        permissions:
            contents: read
            # Optional: allow read access to pull request. Use with `only-new-issues` option.
            # pull-requests: read
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version: '1.22'
            - name: golangci-lint
              uses: golangci/golangci-lint-action@v7
              with:
                  version: v2.0

    # Test, and build jobs can run on both `push` and `pull_request`
    test:
        # Removed dependency on golangci-lint so they run in parallel
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Golang
              uses: actions/setup-go@v5
              with:
                  go-version: '1.22'

            - name: Run tests
              run: go test -v ./...

    go-build:
        # Add dependencies on both golangci-lint and test
        needs: [golangci-lint, test]
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Golang
              uses: actions/setup-go@v5
              with:
                  go-version: '1.22'

            - name: Build binary
              run: go build -v .

    # build_docker_image: Runs ONLY on push to main (including PR merges)
    build_docker_image:
        # Add a condition to run only on push to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-24.04
        needs: [go-build] # Wait for job go-build jobs to finish
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build docker image and push to Docker container registry
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/go-app:${{ github.ref_name }}
