name: CI
on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    lint:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Golang
              uses: actions/setup-go@v5
              with:
                  go-version: "1.21"

            - name: Run linter
              run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && golangci-lint run

    test:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Golang
              uses: actions/setup-go@v5
              with:
                  go-version: "1.21"

            - name: Run tests
              run: go test -v ./...

    build:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Golang
              uses: actions/setup-go@v5
              with:
                  go-version: "1.21"

            - name: Build binary
              run: go build -v .

    build_docker_image:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build docker image and push to Docker Hub
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
                  tags: |
                      ${{ secrets.DOCKER_USERNAME }}/go-app:latest
                      ${{ secrets.DOCKER_USERNAME }}/go-app:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
